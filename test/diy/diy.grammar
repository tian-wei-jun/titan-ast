
// grammar diy ;

@StartGrammar diy ;

@NonterminalGrammar begin ;
diy :
  set+
;

set :
 Set Identifier Equal Identifier End
;

@NonterminalGrammar end ;

@TerminalGrammar begin ;

Identifier :
    IdentifierNondigit
        (   IdentifierNondigit
        |   Digit
        )*
;

 WS
    : [\s\t\n\r]+ -> skip
    ;
@TerminalGrammar end ;

@TerminalFragmentGrammar begin ;

IdentifierNondigit
    :   Nondigit
    ;
	
Nondigit
    :   [a-zA-Z_]
    ;
Digit
    :   [0-9]
    ;

@TerminalFragmentGrammar end ;

@DerivedTerminalGrammar derive(Identifier) begin ;

Set : 'set' ;
Equal : 'equal' | 'Equal'   ;
End : 'end' ;

@DerivedTerminalGrammar end ;